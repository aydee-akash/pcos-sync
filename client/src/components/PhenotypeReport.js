import React from 'react';
import { Document, Page, Text, View, StyleSheet, PDFDownloadLink } from '@react-pdf/renderer';

const styles = StyleSheet.create({
  page: {
    padding: 30,
    backgroundColor: '#ffffff'
  },
  section: {
    margin: 10,
    padding: 10,
  },
  title: {
    fontSize: 24,
    marginBottom: 20,
    color: '#4F46E5',
    textAlign: 'center',
  },
  subtitle: {
    fontSize: 18,
    marginBottom: 10,
    color: '#1F2937',
  },
  text: {
    fontSize: 12,
    marginBottom: 5,
    color: '#374151',
  },
  probability: {
    fontSize: 14,
    marginBottom: 10,
    color: '#4F46E5',
  },
  recommendation: {
    fontSize: 12,
    marginBottom: 5,
    color: '#374151',
    fontStyle: 'italic',
  },
  header: {
    fontSize: 10,
    color: '#6B7280',
    marginBottom: 20,
    textAlign: 'center',
  },
  footer: {
    position: 'absolute',
    bottom: 30,
    left: 30,
    right: 30,
    fontSize: 10,
    color: '#6B7280',
    textAlign: 'center',
  }
});

const PhenotypeReport = ({ prediction, explanation, recommendations }) => {
  const ReportDocument = () => (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.section}>
          <Text style={styles.header}>PCOSync Phenotype Prediction Report</Text>
          <Text style={styles.title}>Phenotype Analysis Report</Text>
          
          <Text style={styles.subtitle}>Prediction Results</Text>
          {Object.entries(prediction).map(([phenotype, probability]) => (
            <Text key={phenotype} style={styles.probability}>
              {phenotype}: {Math.round(probability * 100)}%
            </Text>
          ))}

          <Text style={styles.subtitle}>Analysis</Text>
          <Text style={styles.text}>{explanation}</Text>

          <Text style={styles.subtitle}>Recommended Next Steps</Text>
          {recommendations.map((rec, index) => (
            <Text key={index} style={styles.recommendation}>
              â€¢ {rec}
            </Text>
          ))}

          <Text style={styles.footer}>
            Generated by PCOSync on {new Date().toLocaleDateString()}
          </Text>
        </View>
      </Page>
    </Document>
  );

  return (
    <PDFDownloadLink
      document={<ReportDocument />}
      fileName="phenotype-report.pdf"
      style={{
        padding: '10px 20px',
        backgroundColor: '#4F46E5',
        color: 'white',
        borderRadius: '4px',
        textDecoration: 'none',
        fontSize: '14px',
        fontWeight: '500',
      }}
    >
      {({ blob, url, loading, error }) =>
        loading ? 'Generating report...' : 'Download Report'
      }
    </PDFDownloadLink>
  );
};

export default PhenotypeReport; 